type Query {
  getSoundboards: [Soundboard]!
  getSoundboard(soundboardId: Int!): Soundboard!
  getUser(id: Int!): User!
}

type Mutation {
  createSoundboard(title: String!): Soundboard!
  deleteSoundboard(soundboardId: Int!): Boolean!
  deleteSoundboardLink(linkId: Int!): Boolean!
  addSoundboardLink(link: SoundboardLinkInput!): Boolean!
  signup(user: SignupInput!): User!
  login(credentials: LoginInput!): User!
  appleLogin(email: String!): User!
  waitListSignup(email: String!): Boolean!
}

input SoundboardLinkInput {
  title: String!
  url: String!
  soundboardId: Int!
}

type SoundboardLink {
  id: Int!
  title: String!
  url: String!
  soundboardId: Int!
}

type Soundboard {
  id: Int!
  title: String!
  userId: Int!
  links: [SoundboardLink]!
}

input LoginInput {
  email: String!
  password: String!
}

input SignupInput {
  name: String!
  email: String!
  password: String!
}

type User {
  id: Int!
  name: String!
  email: String!
  token: String
  createdAt: String!
}

schema {
  query: Query
  mutation: Mutation
}
